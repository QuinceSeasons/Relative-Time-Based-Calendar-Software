Our software is being implemented in Python we will use QTest to confirm input field functionality and PyTest for back-end function testing.

QTest will be used for the UI testing. Some of the requirements we must cover are:
 - Clicking to change view dates must successfully move view sufficiently far into the past and future
 - Typing in fields must reject Strings too long without crashing
 - All interactive UI elements respond correctly to user input
 - Calendar view can be switched between weekly and monthly
 - All pop-up windows open and collapse properly
 - No more than one appointment editing pop-up shall exist at once
 - When a unique error occurs, the unique error pop-up is displayed to the user

PyTest will test the backend functions:
 - Data inserted into each database from application must read out without changing
 - Scheduling appointments must update the correct database (Regular, Relative, Series)
 - Scheduling appointments must accurately convert appointment details to database entry, equivalent after a database read
 - Deleting appointment must decrease database size and not be accessible
 - Attempting to edit deleted appointment must reject without crash (cover UI race conditions)
 - Updating view must return appointments in list only if their view is toggled on. Cover permutations of viewing Series, Relative, Regular. Treat user defined appointment types as equivalent and only test a whitelist and blacklist scenario (target on while all others off, target off while all others on)
